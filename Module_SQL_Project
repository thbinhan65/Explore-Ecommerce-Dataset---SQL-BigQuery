-- Question 1: Calculate total visit, pageview, transaction for Jan, Feb and March 2017 (order by month)

SELECT
  format_date("%Y%m", parse_date("%Y%m%d", date)) as month,
  SUM(totals.visits) AS visits,
  SUM(totals.pageviews) AS pageviews,
  SUM(totals.transactions) AS transactions,
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
WHERE _TABLE_SUFFIX BETWEEN '0101' AND '0331'
GROUP BY 1
ORDER BY 1;

-- Question 2: Bounce rate per traffic source in July 2017 (Bounce_rate = num_bounce/total_visit) (order by total_visit DESC)

SELECT
    trafficSource.source as source,
    sum(totals.visits) as total_visits,
    sum(totals.Bounces) as total_no_of_bounces,
    (sum(totals.Bounces)/sum(totals.visits))* 100 as bounce_rate
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
GROUP BY source
ORDER BY total_visits DESC;

-- Question 3: Revenue by traffic source by week, by month in June 2017

with 
month_data as(
  SELECT
    "Month" as time_type,
    format_date("%Y%m", parse_date("%Y%m%d", date)) as month,
    trafficSource.source AS source,
    SUM(p.productRevenue)/1000000 AS revenue
  FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`,
    unnest(hits) hits,
    unnest(product) p
  WHERE p.productRevenue is not null
  GROUP BY 1,2,3
  order by revenue DESC
),

week_data as(
  SELECT
    "Week" as time_type,
    format_date("%Y%W", parse_date("%Y%m%d", date)) as week,
    trafficSource.source AS source,
    SUM(p.productRevenue)/1000000 AS revenue
  FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201706*`,
    unnest(hits) hits,
    unnest(product) p
  WHERE p.productRevenue is not null
  GROUP BY 1,2,3
  order by revenue DESC
)

SELECT * 
FROM month_data
union all
SELECT * 
FROM week_data;

-- Question 4: Average number of pageviews by purchaser type (purchasers vs non-purchasers) in June, July 2017.

WITH avg_pageview6_nonpurchaser as (select 
      COUNT(DISTINCT(fullVisitorId)) as uniq_userid
      , sum(totals.pageviews) AS total_pageview_6   
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`,
UNNEST (hits) as hits,
UNNEST (product) as product
WHERE 
      (_table_suffix BETWEEN '0601' AND '0630')
      AND totals.transactions IS NULL  
      AND product.productRevenue is null ),

Last_result6_Avg_pageview_non_purchaser as (SELECT 
      (total_pageview_6 / uniq_userid) as Avg_pageview_purchaser
FROM avg_pageview6_nonpurchaser),
avg_pageview7_nonpurchaser as (select 
      COUNT(DISTINCT(fullVisitorId)) as uniq_userid
      , sum(totals.pageviews) AS total_pageview_7  
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`,
UNNEST (hits) as hits,
UNNEST (product) as product
WHERE 
      (_table_suffix BETWEEN '07011' AND '0731')
      AND totals.transactions IS NULL  
      AND product.productRevenue is null ),

last_result7_Avg_pageview_non_purchaser as (SELECT 
      (total_pageview_7 / uniq_userid) as Avg_pageview_purchaser
FROM avg_pageview7_nonpurchaser)

SELECT *
FROM Last_result6_Avg_pageview_non_purchaser
UNION ALL
SELECT *
FROM last_result7_Avg_pageview_non_purchaser
ORDER BY Avg_pageview_purchaser

-- Question 5: Average number of transactions per user that made a purchase in July 2017

WITH avg_tra as (
SELECT 
        COUNT(DISTINCT(fullVisitorId))as user_id
        , COUNT(DISTINCT(totals.transactions)) as total_transaction
            
FROM 
        `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`,
        UNNEST (hits) as hits,
        UNNEST (product) as product 
WHERE
        _table_suffix BETWEEN '0701' AND '0731'
        AND product.productRevenue is not null 
),
date_edited as 
(
    SELECT 
    PARSE_DATE('%Y%m%d', date ) AS time_type
    `bigquery-public-data.google_analytics_sample.ga_sessions_2017*`
    WHERE 
    _table_suffix BETWEEN '0701' AND '0731' 
)


SELECT 
    DISTINCT(FORMAT_DATE("%Y%m",date_edited.time_type)) as Month
    , (avg_tra.total_transaction / avg_tra.user_id ) as Avg_total_transactions_per_user
FROM avg_tra, date_edited


-- Question 6: Average amount of money spent per session. Only include purchaser data in July 2017

SELECT
    format_date("%Y%m",parse_date("%Y%m%d",date)) as month,
    ((sum(product.productRevenue)/sum(totals.visits))/power(10,6)) as avg_revenue_by_user_per_visit
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
  ,unnest(hits) hits
  ,unnest(product) product
WHERE product.productRevenue is not null
and totals.transactions>=1
GROUP BY month;


-- Question 7: Other products purchased by customers who purchased product "YouTube Men's Vintage Henley" in July 2017. Output should show product name and the quantity was ordered.

with buyer_list as(
    SELECT
        distinct fullVisitorId
    FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
    , UNNEST(hits) AS hits
    , UNNEST(hits.product) as product
    WHERE product.v2ProductName = "YouTube Men's Vintage Henley"
    AND totals.transactions>=1
    AND product.productRevenue is not null
)

SELECT
  product.v2ProductName AS other_purchased_products,
  SUM(product.productQuantity) AS quantity
FROM `bigquery-public-data.google_analytics_sample.ga_sessions_201707*`
, UNNEST(hits) AS hits
, UNNEST(hits.product) as product
JOIN buyer_list using(fullVisitorId)
WHERE product.v2ProductName != "YouTube Men's Vintage Henley"
 and product.productRevenue is not null
GROUP BY other_purchased_products
ORDER BY quantity DESC;

-- Question 8: Calculate cohort map from product view to addtocart to purchase in Jan, Feb and March 2017. For example, 100% product view then 40% add_to_cart and 10% purchase.
-- Add_to_cart_rate = number product  add to cart/number product view. Purchase_rate = number product purchase/number product view. The output should be calculated in product level.
 
with
product_view as(
  SELECT
    format_date("%Y%m", parse_date("%Y%m%d", date)) as month,
    count(product.productSKU) as num_product_view
  FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
  , UNNEST(hits) AS hits
  , UNNEST(hits.product) as product
  WHERE _TABLE_SUFFIX BETWEEN '20170101' AND '20170331'
  AND hits.eCommerceAction.action_type = '2'
  GROUP BY 1
),

add_to_cart as(
  SELECT
    format_date("%Y%m", parse_date("%Y%m%d", date)) as month,
    count(product.productSKU) as num_addtocart
  FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
  , UNNEST(hits) AS hits
  , UNNEST(hits.product) as product
  WHERE _TABLE_SUFFIX BETWEEN '20170101' AND '20170331'
  AND hits.eCommerceAction.action_type = '3'
  GROUP BY 1
),

purchase as(
  SELECT
    format_date("%Y%m", parse_date("%Y%m%d", date)) as month,
    count(product.productSKU) as num_purchase
  FROM `bigquery-public-data.google_analytics_sample.ga_sessions_*`
  , UNNEST(hits) AS hits
  , UNNEST(hits.product) as product
  WHERE _TABLE_SUFFIX BETWEEN '20170101' AND '20170331'
  AND hits.eCommerceAction.action_type = '6'
  and product.productRevenue is not null 
  GROUP BY 1
)

SELECT
    pv.*,
    num_addtocart,
    num_purchase,
    round(num_addtocart*100/num_product_view,2) as add_to_cart_rate,
    round(num_purchase*100/num_product_view,2) as purchase_rate
FROM product_view pv
LEFT JOIN add_to_cart a on pv.month = a.month
LEFT JOIN purchase p on pv.month = p.month
ORDER BY pv.month;
